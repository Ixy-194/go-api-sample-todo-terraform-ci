name: Terrraform Validation

on:
  push:
  pull_request:

jobs:
  terraform:
    name: Terrraform Validation
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.10

    - name: Terraform Format
      run: terraform fmt -recursive -check

    - name: Dev Terraform init
      working-directory: ./env/dev 
      run: |
        terraform init
        terraform validate

    - name: Dev Terraform Plan
      working-directory: ./env/dev
      id: dev_plan
      run: terraform plan -no-color

    - name: Update Pull Request
      uses: actions/github-script@v5
      if: github.event_name == 'pull_request'
      env:
        Dev_PLAN: "terraform\n${{ steps.dev_plan.outputs.stdout }}"
      with:
        result-encoding: string
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Check! Terraform Show Plans ðŸ–Œ\`
          <details><summary>Dev Show Plan</summary>

          \`\`\`\n
          ${process.env.DEV_PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
